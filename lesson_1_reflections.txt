How did viewing a diff between two versions of a file help you see the bug that was introduced?

The diff showed the changes made between the two different versions of the files, by seeing the differences, it narrows down the possible code that may be causing the bug.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Easier to find an fix bugs, easy to look back at previous versions to see what was done differently.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Some pros would be that the commit wouldn't be at times where a commit makes no sense, and the code may not be functional. Some cons would be that a programmer may forget to commit when it would be useful to.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

In Google Docs, it's unlikey that two documents have a connection, or some sort of dependency on another, while in Git it's very likely.

How can you use the commands git log and git diff to view the history of files?

With git log, you can see the 'commits' or various saved version of the files, with git diff, you can view the changes between two commits.

How might using version control make you more confident to make changes that could break something?

It would make reverting to an working version much easier.

Now that you have your workspace set up, what do you want to try using Git for?

EVERYTHING.

